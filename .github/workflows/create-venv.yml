# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    branches:
      - master
      - developer
#
#  push:
#    branches: [ master ]

  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log Level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      print_tags:
        description: 'True to print to STDOUT'
        required: true
        type: boolean
      tags:
        description: 'Test scenario tags'
        required: true
        type: string
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true


jobs:
  deploy-run:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10.12'
    - name: Install dependencies
      run: python -m pip install --upgrade pip

    - name: Create a Venv environment
      run: python3 -m venv venv

    - name: Open a Venv environment
      run: source venv/bin/activate

    - name: Install requirements
      run: pip install -r requirements.txt

    - name: View packages installed in a venv environment
      run: |
        ls
        pip freeze

#    - name: Build package
#      run: python -m build
#    - name: Run FastAPI
#      run: uvicorn cicd_test.main:app --reload

  test-jobs:

    runs-on: ubuntu-latest

    needs: [deploy-run]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.12'
      - name: Install dependencies
        run: python -m pip install --upgrade pip

      - name: Create a Venv environment
        run: python3 -m venv venv

      - name: Open a Venv environment
        run: source venv/bin/activate

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: View packages installed in a venv environment
        run: |
          ls
          pip freeze

      - name: See python3 --version # check python3 --version
        run: python3 --version

      - name: See pytest --version # check pytest --version
        run: pytest --version

      - name: Run test file
        run: pytest tests/tests.py::test_main_function
#        run: pytest tests/tests.py::test_main_function


