# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    branches:
      - main
      - master
      
  push:
    branches:
      - main
      - master



jobs:
  deploy-run:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.12.1'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python3 -m venv venv
    - name: Open venv file and Install requirements
      run: |
        source venv/bin/activate
        pip install -r requirements.txt
        pwd & ls -a
        source venv/bin/activate
        pip freeze
#    - name: Build package
#      run: python -m build
#    - name: Run FastAPI
#      run: uvicorn cicd_test.main:app --reload
      
  test-jobs:
  
    runs-on: ubuntu-latest
    
    needs: [deploy-run]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12.1'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python3 -m venv venv
      - name: Open venv file and Install requirements
        run: |
          source venv/bin/activate
          pip install -r requirements.txt
      - name: See pwd line and tests.py
        run: |
          pwd & ls -a
          source venv/bin/activate
          cd tests/
          ls & cat tests.py
      - name: Run test file
        run: pytest tests/tests.py::test_main_function


