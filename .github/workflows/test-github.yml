
name: On workflow for test github

on:
  workflow_dispatch:
    inputs:
      defa:
        description: 'Defa descript'
        required: true
        default: 'warning'
        type: choice
        options:
          - warding
          - blue
          - red
      in_print:
        description: 'Is print file'
        required: true
        type: boolean


  workflow_run:
    workflows: [ Test yml file ]
    types:
      - completed
      - requested
    branches:
      - developer

jobs:
  job1:
    runs-on: ubuntu-layout
    steps:
      - uses: action/checkout@v3
      - name: Set up Python
        uses: action/setup-python@v3
        with:
          python-version: '3.10.12'
      - name: Step1
        shell: python
        run: |
          import os
          print("Hello ", os.GITHUB_REPOSITORY_OWNER)

#env:
#  PASS: ${{ 6069 }}
#  myAGE: ${{ 19 }}
#  Developer: ${{ true }}


#if: ${{ success() }}

#if: ${{ always() }}

#if: ${{ cancelled() }} Agar jarayon bekor bo'lsa true qaytaradi

#if: ${{ failure() }} Agar yuqoridagi ishlarni birortasi bajarilmasa true

#github.event_name = ["push", "pull_request"]
#github.actor = "ishga tushirgan user nomi"



#defaults:
#  run:
#    working_directory: ./app
#
#jobs:
#  ...

#timeout_minutes: 30  30 mindan keyin ishlayotgan job yoki jobslar yopiladi


#env:
#  object_: ${{ toJson(github) }}
#
#run: echo "$object_"


#job_n:
#
#  strategy:
#    matrix:
#      os: [ubuntu-latest, windows-latest]
#      py_version: ['3.10.12', '3.10.13']
#  runs-on: ${{ matrix.os }}
#  steps:
#    ...


#on: ["push", "pull_request", "workflow_dispatch"]


#on:
#  workflow_dispatch:
#    inputs:
#      logLevel:
#        description: 'Log Level'
#        required: true
#        default: 'warning'
#        type: choice
#        options:
#          - info
#          - warning
#          - debug
#      print_tags:
#        description: 'True to print to STDOUT'
#        required: true
#        type: boolean
#      tags:
#        description: 'Test scenario tags'
#        required: true
#        type: string
#      environment:
#        description: 'Environment to run tests against'
#        type: environment
#        required: true
#
#
#jobs:
#  print_tag:
#    runs_on: ubuntu-latest
#    if: ${{ inputs.print_tags }}
#    steps:
#      - name: Print the input tag to STDOUT
#        run: echo The tags are ${{ inputs.tags }}




#on:
#  push:
#    paths:
#      - '**.txt'
# txt bilan tugaydigan faylga change qilinsa ishga tushadi

# Har kuni soat 5:30 va 17:30 da ishga tushiradi
#on:
#  schedule:
#    - cron: '30 5,17 * * *'


# *  *  *  *  *
# minute
#     hour
#        day
#           month
#              week

# 15 * * * *  har kuni har 15 min.da run bo'ladi




#
#name: Upload data
#
#on:
#  release:
#    branches:
#      - master
#
#  push:
#    branches: [master]
#
#jobs:
#  ...

#name: Use the data
#
#on:
#  workflow_run:
#    workflows: [ Upload data ]
#    types:
#      - completed
#
#jobs:
#  ...


# Build nomli oqim main branchda ishlaganda ishga tushadi
#on:
#  workflow_run:
#    workflows: ["Build"]
#    types: [requested]
#    branches:
#      - "main"


# Build nomli oqim developer branchda ishlamaganda ishga tushadi
#on:
#  workflow_run:
#    workflows: ["Build"]
#    types: [requested]
#    branches-ignore:
#      - "developer"



# Bu faqat pull qilinganda va push qilinmaganda ishlaydi
#steps:
#  - name: First step
#    if: ${{ github.event_name == 'pull_request' && github.event_name != 'push' }}


#--------------------------------------------------------------------------------------------------------------

#tekshirish kerak nimani chiqaradi ekan
#github.event.action

#--------------------------------------------------------------------------------------------------------------


#steps:
#  - name: Display the "Hello World" and path
#    shell: python
#    run: |
#      import os
#      print("Hello World")
#      print(os.environ['PATH']




#echo "### Hello world! :rocket:" >> $GITHUB_STEP_SUMMARY


#- name:Set color:
#    id: color-selected
#    run: echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"
#- name: Get color
#  env:
#    SELECTED_COLOR: ${{ steps.color-selector.outputs.SELECTED_COLOR }}
#  run: echo "The selected color is $SELECTED_COLOR"




# Ishchi katalogini o'rnatish ekan ?
#defaults:
#  run:
#    shell: bash
#    working-directory: ./scripts



#
#jobs:
#  job1:
#    runs-on: ubuntu-latest
#    outputs:
#      output1: ${{ steps.step1.outputs.test }}
#      output2: ${{ steps.step2.outputs.test }}
#    steps:
#      - id: step1
#        run: echo "test=Hello" >> "$GITHUB-OUTPUT"
#      - id: step2
#        run: echo "test=world" >> "$GITHUB-OUTPUT"
#  job2:
#    runs-on: ubuntu-latest
#    needs: [job1]
#    steps:
#      - env:
#          OUTPUT1: ${{ needs.job1.outputs.output1 }}
#          OUTPUT2: ${{ needs.job1.outputs.output2 }}
#        run: echo "$OUTPUT1  $OUTPUT2"



